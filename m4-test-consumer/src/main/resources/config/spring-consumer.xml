<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<!-- <context:component-scan base-package="org.consumer" /> -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" />  -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
 
 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="order" value="1" />
	  <property name="mediaTypes">
		<map>
		   <entry key="json" value="application/json" />
		   <entry key="xml" value="application/xml" />
		   <entry key="rss" value="application/rss+xml" />
		</map>
	  </property>

	  <property name="defaultViews">
		<list>
		  <!-- JSON View -->
		  <bean
			class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		  </bean>

		  <!-- JAXB XML View -->
		  <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
			<constructor-arg>
				<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				   <property name="classesToBeBound">
					<list>
					   <value>com.yunbao.m4.model.Shop</value>
					   <value>com.yunbao.m4.model.Product</value>
					   <value>com.yunbao.m4.model.Desk</value>
					   <value>com.yunbao.m4.model.House</value>
					   <value>com.yunbao.m4.model.Room</value>
					   <value>com.yunbao.m4.model.Truck</value>
					   <value>com.yunbao.m4.model.CollectionModel</value>
					</list>
				   </property>
				</bean>
			</constructor-arg>
		  </bean>
		 </list>
	  </property>
	  <property name="ignoreAcceptHeader" value="true" />

	</bean>
	
	<bean id="urlHandler"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="urlMap">
			<map>
				<entry key="/consumeProd.json" value-ref="prodController" />
				<!-- <entry key="/prod.xml" value-ref="prodController" /> -->
			</map>
		</property>
	</bean>

	<bean id="prodController" class="com.yunbao.m4.consumer.controller.ProductController">
		<property name="delegate" ref="prodDelegate" />
		<property name="container" ref="prodContainer" />
	</bean>

	<bean id="prodContainer" class="com.yunbao.m4.consumer.container.ProdContainer" />

	<bean id="prodDelegate" class="com.yunbao.m4.consumer.delegate.ProdDelegate">
		<!-- <property name="service" ref="prodPipelineService" /> -->
		<property name="service" ref="aPipelineService" />
	</bean>
</beans>